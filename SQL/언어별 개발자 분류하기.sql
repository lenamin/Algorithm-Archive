
WITH HAS_FLAGED AS (
    SELECT MAX(CASE WHEN SF.NAME = 'Python' THEN 1 ELSE 0 END) AS HAS_PYTHON,
           MAX(CASE WHEN SF.CATEGORY = 'Front End' THEN 1 ELSE 0 END) AS HAS_FE,
           MAX(CASE WHEN SF.NAME = 'C#' THEN 1 ELSE 0 END) AS HAS_CSHARP,
           DF.ID, 
           DF.EMAIL
    FROM DEVELOPERS DF, SKILLCODES SF
    WHERE DF.SKILL_CODE & SF.CODE = SF.CODE
    GROUP BY DF.ID, DF.EMAIL)
SELECT (CASE WHEN HAS_FLAGED.HAS_PYTHON = 1 AND HAS_FLAGED.HAS_FE = 1 THEN 'A'
             WHEN HAS_FLAGED.HAS_CSHARP = 1 THEN 'B'
             WHEN HAS_FLAGED.HAS_FE = 1 THEN 'C' END) AS GRADE, D.ID, D.EMAIL
FROM DEVELOPERS D
INNER JOIN HAS_FLAGED
ON D.ID = HAS_FLAGED.ID 
WHERE (CASE WHEN HAS_FLAGED.HAS_PYTHON = 1 AND HAS_FLAGED.HAS_FE = 1 THEN 'A'
            WHEN HAS_FLAGED.HAS_CSHARP = 1 THEN 'B'
            WHEN HAS_FLAGED.HAS_FE = 1 THEN 'C' END) IS NOT NULL
ORDER BY GRADE, D.ID